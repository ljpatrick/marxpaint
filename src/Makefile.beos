## makefile generated by makemake ##
## BeOS Generic Makefile v2.2 ##

## Fill in this file to specify the project being created, and the referenced
## makefile-engine will do all of the hard work for you.  This handles both
## Intel and PowerPC builds of the BeOS.

## Application Specific Settings ---------------------------------------------

# specify the name of the binary
NAME= ../tuxpaint

# specify the type of binary
#	APP:	Application
#	SHARED:	Shared library or add-on
#	STATIC:	Static library archive
#	DRIVER: Kernel Driver
TYPE= APP
## (makemake defaults to APP type) ##

#	add support for new Pe and Eddie features
#	to fill in generic makefile

#%{
# @src->@ 

#	specify the source files to use
#	full paths or paths relative to the makefile can be included
# 	all files, regardless of directory, will have their object
#	files created in the common object directory.
#	Note that this means this makefile will not work correctly
#	if two source files with the same name (source.c or source.cpp)
#	are included from different directories.  Also note that spaces
#	in folder names do not work well with this makefile.
SRCS=  \
	src/tuxpaint.c \
	src/BeOS_print.cpp

#	specify the resource files to use
#	full path or a relative path to the resource file can be used.
RSRCS=  \
	tuxpaint.rsrc

# @<-src@ 
#%}

#	end support for Pe and Eddie

#	specify additional libraries to link against
#	there are two acceptable forms of library specifications
#	-	if your library follows the naming pattern of:
#		libXXX.so or libXXX.a you can simply specify XXX
#		library: libbe.so entry: be
#		
#	- 	if your library does not follow the standard library
#		naming scheme you need to specify the path to the library
#		and it's name
#		library: my_lib.a entry: my_lib.a or path/my_lib.a
LIBS=  \
	z \
	png \
	intl \
	SDL \
	SDL_image \
	SDL_mixer \
	SDL_ttf \
	root \
	be

#	specify additional paths to directories following the standard
#	libXXX.so or libXXX.a naming scheme.  You can specify full paths
#	or paths relative to the makefile.  The paths included may not
#	be recursive, so include all of the paths where libraries can
#	be found.  Directories where source files are found are
#	automatically included.
LIBPATHS= /boot/home/config/lib/

#	additional paths to look for system headers
#	thes use the form: #include <header>
#	source file directories are NOT auto-included here
SYSTEM_INCLUDE_PATHS = \
	/boot/develop/tools/gnupro/include/SDL/

#	additional paths to look for local headers
#	thes use the form: #include "header"
#	source file directories are automatically included
LOCAL_INCLUDE_PATHS = \
	src/mouse/ \
	src/ 

#	specify the level of optimization that you desire
#	NONE, SOME, FULL
OPTIMIZE= SOME

#	specify any preprocessor symbols to be defined.  The symbols will not
#	have their values set automatically; you must supply the value (if any)
#	to use.  For example, setting DEFINES to "DEBUG=1" will cause the
#	compiler option "-DDEBUG=1" to be used.  Setting DEFINES to "DEBUG"
#	would pass "-DDEBUG" on the compiler's command line.
DEFINES= CONFDIR="\".\"" DOC_PREFIX="\"./docs/\"" DATA_PREFIX="\"./data/\"" LOCALEDIR="\"/boot/home/config/share/locale/\""

#	specify special warning levels
#	if unspecified default warnings will be used
#	NONE = supress all warnings
#	ALL = enable all warnings
WARNINGS = 

#	specify whether image symbols will be created
#	so that stack crawls in the debugger are meaningful
#	if TRUE symbols will be created
SYMBOLS = 

#	specify debug settings
#	if TRUE will allow application to be run from a source-level
#	debugger.  Note that this will disable all optimzation.
DEBUGGER = 

#	specify additional compiler flags for all files
COMPILER_FLAGS =-fomit-frame-pointer -funroll-loops -pipe

#	specify additional linker flags
LINKER_FLAGS =-Xlinker -s -Xlinker -x

#	specify the version of this particular item
#	(for example, -app 3 4 0 d 0 -short 340 -long "340 "`echo -n -e '\302\251'`"1999 GNU GPL") 
#	This may also be specified in a resource.
APP_VERSION = 

#	(for TYPE == DRIVER only) Specify desired location of driver in the /dev
#	hierarchy. Used by the driverinstall rule. E.g., DRIVER_PATH = video/usb will
#	instruct the driverinstall rule to place a symlink to your driver's binary in
#	~/add-ons/kernel/drivers/dev/video/usb, so that your driver will appear at
#	/dev/video/usb when loaded. Default is "misc".
DRIVER_PATH = 

## include the makefile-engine
include $(BUILDHOME)/etc/makefile-engine

clean-trans:
	@rm -rf trans

translations:	trans trans/fr.mo trans/de.mo trans/en_gb.mo trans/es.mo \
		trans/fi.mo trans/tr.mo trans/nn.mo trans/it.mo trans/nl.mo \
		trans/sv.mo trans/is.mo trans/da.mo trans/pt_br.mo \
		trans/cz.mo trans/hu.mo trans/ko.mo trans/ca.mo trans/zh_cn.mo \
		trans/id.mo trans/ro.mo trans/el.mo trans/pl.mo

trans:
	@echo
	@echo "...Preparing translation files..."
	@mkdir trans

trans/fr.mo:	src/po/fr.po
	@echo "   ...French..."
	@msgfmt src/po/fr.po -o trans/fr.mo

trans/ro.mo:	src/po/ro.po
	@echo "   ...Romanian..."
	@msgfmt src/po/ro.po -o trans/ro.mo

trans/de.mo:	src/po/de.po
	@echo "   ...German..."
	@msgfmt src/po/de.po -o trans/de.mo

trans/en_gb.mo:	src/po/en_gb.po
	@echo "   ...British English..."
	@msgfmt src/po/en_gb.po -o trans/en_gb.mo

trans/zh_cn.mo:	src/po/zh_cn.po
	@echo "   ...Chinese..."
	@msgfmt src/po/zh_cn.po -o trans/zh_cn.mo

trans/id.mo:	src/po/id.po
	@echo "   ...Indonesian..."
	@msgfmt src/po/id.po -o trans/id.mo

trans/el.mo:	src/po/el.po
	@echo "   ...Greek..."
	@msgfmt src/po/el.po -o trans/el.mo

trans/ca.mo:	src/po/ca.po
	@echo "   ...Catalan..."
	@msgfmt src/po/ca.po -o trans/ca.mo

trans/da.mo:	src/po/da.po
	@echo "   ...Danish..."
	@msgfmt src/po/da.po -o trans/da.mo

trans/ko.mo:	src/po/ko.po
	@echo "   ...Korean..."
	@msgfmt src/po/ko.po -o trans/ko.mo

trans/es.mo:	src/po/es.po
	@echo "   ...Spanish..."
	@msgfmt src/po/es.po -o trans/es.mo

trans/fi.mo:	src/po/fi.po
	@echo "   ...Finnish..."
	@msgfmt src/po/fi.po -o trans/fi.mo
	
trans/tr.mo:	src/po/tr.po
	@echo "   ...Turkish..."
	@msgfmt src/po/tr.po -o trans/tr.mo

trans/sv.mo:	src/po/sv.po
	@echo "   ...Swedish..."
	@msgfmt src/po/sv.po -o trans/sv.mo

trans/pt_br.mo:	src/po/pt_br.po
	@echo "   ...Brazilian Portuguese..."
	@msgfmt src/po/pt_br.po -o trans/pt_br.mo

trans/pl.mo:	src/po/pl.po
	@echo "   ...Polish..."
	@msgfmt src/po/pl.po -o trans/pl.mo

trans/nn.mo:	src/po/nb.po
	@echo "   ...Norwegian Bokmal..."
	@msgfmt src/po/nb.po -o trans/nb.mo

trans/nn.mo:	src/po/nn.po
	@echo "   ...Norwegian Nynorsk..."
	@msgfmt src/po/nn.po -o trans/nn.mo
	
trans/it.mo:	src/po/it.po
	@echo "   ...Italian..."
	@msgfmt src/po/it.po -o trans/it.mo
	
trans/nl.mo:	src/po/nl.po
	@echo "   ...Dutch..."
	@msgfmt src/po/nl.po -o trans/nl.mo
	
trans/is.mo:	src/po/is.po
	@echo "   ...Icelandic..."
	@msgfmt src/po/is.po -o trans/is.mo

trans/hu.mo:	src/po/hu.po
	@echo "   ...Hungarian..."
	@msgfmt src/po/hu.po -o trans/hu.mo

trans/cz.mo:	src/po/cz.po
	@echo "   ...Czech..."
	@msgfmt src/po/cz.po -o trans/cz.mo
