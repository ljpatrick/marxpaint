                                   Tux Paint
                                 version 0.9.26
                        Documentation sur l'installation

      Copyright &copie; 2002-2021 par divers contributeurs; voir AUTHORS.
                            http://www.tuxpaint.org/

                                  mars 9, 2021

     ----------------------------------------------------------------------

Exigences :

  libSDL

       Tux Paint nécessite la bibliothèque de couches DirectMedia simple
       (libSDL), une bibliothèque de programmation multimédia Open Source
       disponible sous la Licence publique générale limitée GNU (LGPL).

       Avec libSDL, Tux Paint dépend d'un certain nombre d'autres
       bibliothèques SDL : SDL_Image (pour les fichiers graphiques), SDL_TTF
       et (en option) SDL_Pango (pour la prise en charge des polices True
       Type) et, éventuellement, SDL_Mixer (pour les effets sonores).

    Utilisateurs de Linux/Unix :

         Les bibliothèques SDL sont disponibles en tant que code source, ou
         en tant que paquets RPM ou Debian pour diverses distributions de
         Linux. Ils peuvent être téléchargés à partir de :

           * libSDL: http://www.libsdl.org/
           * SDL_Image: http://www.libsdl.org/projects/SDL_image/
           * SDL_TTF: http://www.libsdl.org/projects/SDL_ttf/
           * SDL_Pango: http://sourceforge.net/projects/sdlpango/ (optionnel)
           * SDL_Mixer: http://www.libsdl.org/projects/SDL_mixer/ (optionnel)

         Elles sont aussi parmi les paquets inclus dans votre distribution
         (par ex. sur le media d'installation, ou via la maintenance de vos
         logiciels comme la commande apt de Debian).

         Remarque ;lors de l'installation à partir de packages, assurez-vous
         d'installer AUSSI les versions de développement des paquets (Par ex.
         installez les deux "SDL-1.2.4.rpm" et "SDL-1.2.4-devel.rpm".)

  Autres bibliothèques

       Tux Paint profite également d'un certain nombre d'autres bibliothèques
       gratuites LGPL. Sous Linux, tout comme SDL, ils devraient être soit
       déjà installées, soit facilement disponibles avec votre distribution
       Linux.

    libPNG

         Tux Paint utilise le format PNG (Portable Network Graphics) pour ses
         fichiers de données. SDL_image nécessitera l'installation de libPNG.

         http://www.libpng.org/pub/png/libpng.html

    gettext

         Tux Paint utilise les paramètres régionaux de votre système avec la
         bibliothèque "gettext" pour prendre en charge plusieurs langues (par
         exemple, l'espagnol). Vous aurez besoin d'installer la bibliothèque
         de gettext.

         http://www.gnu.org/software/gettext/

    libpaper (Linux/Unix uniquement)

         Depuis Tux Paint 0.9.17, Tux Paint peut déterminer le format de
         papier par défaut (par exemple, A4 ou Lettre), ou peut être invité à
         utiliser un format particulier, ceci grâce à libpaper.

         https://github.com/naota/libpaper

    FriBiDi

         Les outils "Texte" et "Étiquette" de Tux Paint supportent les
         langues bidirectionnelles, grâce à la bibliothèque "FriBidi".

         http://fribidi.org/

    Support des graphismes SVG

         À partir de Tux Paint 0.9.17, Tux Paint peut prendre en charge les
         images SVG (Scalable Vector Graphics) pour les tampons. Deux
         ensembles de bibliothèques sont pris en charge et le support SVG
         peut être complètement désactivé (via "make SVG_LIB:==")

      librsvg-2 & libCairo2 (nouvelles bibliothèques)

           * libRSVG 2: http://librsvg.sourceforge.net/
           * Cairo 2: http://www.cairographics.org/
           * Celles-ci dépendent aussi de :
                * GdkPixbuf & GLib: http://www.gtk.org/
                * Pango: http://www.pango.org/

      Anciennes bibliothèques

           * libcairo1, libsvg1, & libsvg-cairo1:
             http://www.cairographics.org/
           * Celles-ci dépendent aussi de :
                * libxml2: https://gitlab.gnome.org/GNOME/libxml2

    Fonction d'exportation de GIF animés

         Pour prendre en compte l'exportation de GIF animés (diaporama), la
         bibliothèque "libimagequant" (issue du projet "pngquant" est
         nécessaire.

         https://github.com/ImageOptim/libimagequant

    Outils NetPBM (optionnel) Ne sont plus utilisés, par défaut

         Sous Linux et Unix, les anciennes versions de Tux Paint utilisaient
         les outils NetPBM comme aide à l'impression. (Un PNG est généré par
         TuxPaint et converti en PostScript en utilisant en ligne de commande
         les outils NetPBM pngtopnm et pnmtops.)

         http://netpbm.sourceforge.net/

Compilation et installation :

     Tux Paint est publié sous la licence publique générale GNU (GPL) (voir
     "COPYING.txt" pour plus de détails), et donc le 'code source' du
     programme est disponible gratuitement.

  Utilisateurs de Windows :

    Compilation :

         Depuis février 2005 (à partir de Tux Paint 0.9.15), le "Makefile"
         inclut la prise en charge de la construction sur un système Windows
         à l'aide de MinGW/MSYS (http://www.mingw.org/).

         Après avoir configuré l'environnement et construit et installé tous
         les dépendances, utilisez ces commandes, dans MSYS, pour créer,
         installer et exécuter :

      Avant la version 0.9.20 :

           $ make win32
           $ make install-win32
           $ tuxpaint

      Version 0.9.20 et au-delà :

           $ make
           $ make install
           $ tuxpaint

         Utilisez la commande suivante pour construire une version adaptée à
         la redistribution avec l'installateur ou bien un fichier zip :

           $ make bdist-win32

         Ou bien si vous compilez pour Win9x/ME :

           $ BDIST_WIN9X=1 make bdist-win32

         Avant de mettre en oeuvre les opérations ci-dessus, vous devez
         configurer l'environnement et compilez ou installez les
         bibliothèques nécessaires pour Tux Paint. John Popplewell a
         rassemblé quelques instructions ici pour y parvenir :

         http://www.johnnypops.co.uk/tuxpaint/

         Lisez les notes pertinentes si vous construisez pour Win9X / ME.

    Installateur :

         Double-cliquez sur l'exécutable du programme d'installation de Tux
         Paint (fichier .EXE) et Suivez les instructions.

         Tout d'abord, il vous sera demandé d'accepter la licence. (Il s'agit
         de la licence publique générale GNU (GPL), qui est également
         disponible en tant que "COPYING.txt".)

         Il vous sera ensuite demandé si vous souhaitez installer des
         raccourcis à Tux Paint dans votre menu Démarrer de Windows et sur
         votre bureau Windows.(Les deux options sont définies par défaut.)

         Puis, il vous sera demandé où vous souhaitez installer Tux Paint. La
         valeur par défaut devrait convenir, tant qu'il y a de l'espace
         disponible. Sinon, choisissez un autre emplacement.

         À ce stade, vous pouvez cliquer sur «Installer» pour installer Tux
         Paint !

    Modification des paramètres à l'aide du raccourci :

         Pour modifier les paramètres du programme, cliquez avec le bouton
         droit sur le raccourci TuxPaint et sélectionnez «Propriétés» (en
         bas).

         Assurez-vous que l'onglet "Raccourci" est sélectionné dans la
         fenêtre qui apparaît et examinez le champ «Cible:». Vous devriez
         voir quelque chose comme ceci :

           "C:\Program Files\TuxPaint\TuxPaint.exe"

         Vous pouvez maintenant ajouter des options de ligne de commande qui
         seront activées lorsque vous double-cliquez sur l'icône.

         Par exemple, pour faire fonctionner le jeu en mode plein écran, avec
         des formes simples (pas d'option de rotation) et en français,
         ajoutez les options (après 'TuxPaint.exe'), comme ceci :

           "C:\Program Files\TuxPaint\TuxPaint.exe" -f -s --lang french

         (Voir «README.txt» pour une liste complète des options de ligne de
         commande disponibles.)

         Si vous faites une erreur ou que tout disparaît, utilisez [Ctrl] +
         [Z] pour annuler ou appuyez simplement sur la touche [Esc] et la
         boîte se fermera sans aucune modification (sauf si vous avez appuyé
         sur le bouton "Appliquer" !).

         Quand vous avez fini, appuyez sur "OK".

    Si quelque chose ne va pas :

         Si, lorsque vous double-cliquez sur le raccourci pour lancer le jeu,
         rien ne se passe, c'est probablement parce que certaines des options
         en lignes de commande sont erronées. Ouvrez un explorateur comme
         avant et recherchez un fichier appelé "stderr.txt" dans le dossier
         TuxPaint.

         Il contiendra une description de ce qui n'allait pas.
         Habituellement, ce sera simplement dû à une casse de caractère
         incorrecte (majuscule 'Z' à la place de 'z' minuscule) ou un '-'
         (tiret) manquant (en trop).

  Utilisateurs de Linux/Unix :

    Compilation :

         Remarque :Tux Paint n'utilise pas autoconf/automake, dès lors il n'y
         a pas de script "./configure" à lancer. La compilation devrait aller
         cependant aller toute seule, en supposant que Tux Paint ait tout ce
         dont il a besoin.

         Pour compiler le programme à partir des sources, lancez simplement
         la commande suivante après une invite shell (par ex. "$") :

           $ make

    Désactivation du support SVG (donc des dépendances Cairo, libSVG, et
    svg-cairo)

         Pour désactiver le support de SVG (par ex. si votre système n'a pas
         de bibliothèque Cairo, ou d'autres choses dont SVG est dépendan),
         vous pouvez exécuter "make" avec SVG_LIB= SVG_CFLAGS=
         NOSVGFLAG=NOSVG :

           $ make SVG_LIB= SVG_CFLAGS=

    Désactivation du support Pango (donc des dépendances Pango, Cairo, etc ...)

         Avant la version 0.9.18, Tuxpaint utilisait la bibliothèque
         libSDL_ttf pour gérer les fichiers utilisant les fontes True Type.
         Depuis la 09.18 libSDL_Pango est utilisée, car il permet un meilleur
         support pour l'internationalisation. Cependant, si vous voulez
         désactiver l'utilisation de SDL_Pango, vous pouvez le faire en
         exécutant "make" avec "SDL_PANGO_LIB=" :

           $ make SDL_PANGO_LIB=

    Désactiver le son lors de la compilation :

         Si vous n'avez pas de carte son ou si vous préférez créer le
         programme sans support sonore (et donc sans dépendance SDL_mixer),
         vous pouvez exécuter "make" avec "SDL_MIXER_LIB=" comme paramètre :

           $ make SDL_MIXER_LIB=

    Autres options :

         Diverses autres options (par exemple, les dossiers d'installation)
         peuvent être remplacées; voir dans "Makefile" pour plus de détails.

    Si vous obtenez des erreurs :

         Si vous avez des erreurs lors de la compilation, assurez-vous
         d'avoir les bibliothèques adéquates installées (voir ci-dessus). Si
         vous utilisez les versions issues des paquets des bibliothèques (par
         exemple, les RPM sous RedHat ou les DEB sous Debian), assurez-vous
         d'avoir choisi également les packages "-dev" ou "-devel"
         correspondants, sinon vous ne pourrez pas compiler Tux Paint (et
         d'autres programmes) provenant des sources !

    Installation :

         En supposant qu'aucune erreur fatale ne s'est produite, vous pouvez
         maintenant installer le programme afin qu'il puisse être exécuté par
         les utilisateurs du système. Par défaut, cela doit être effectué par
         l'utilisateur "root" ("superutilisateur"). Passer à "root" en tapant
         la commande :

           $ su

         Entrez le mot de passe de "root" à l'invite. Vous devriez maintenant
         être "root" (avec une invite comme "#"). Pour installer le programme
         et ses fichiers de données, tapez :

           # make install

         Pour finir, vous pouvez revenir sur votre compte utilisateur en
         sortant du compte superutilisateur :

           # exit

         Autre manière : vous faites simplement utilisation de la commande
         "sudo" (par ex. sur Ubuntu) :

           $ sudo make install

         Remarque :Par défaut, "tuxpaint, le programme exécutable, est placé
         en "/usr/local/bin/". Les données (images, sons, etc ...) sont dans
         "/usr/local/share/tuxpaint/".

      Changer où vont les fichiers

           Vous pouvez changer où iront les fichiers en définissant des
           variables pour "Makefile" sur la ligne de commande. "DESTDIR" est
           utilisé pour indiquer la sortie des résultats de la compilation.
           "PREFIX" est la base où tous les autres fichiers iront et est
           définie par défaut comme "/usr/local".

           Les autres variables sont :

           BIN_PREFIX
                   Où le binaire "tuxpaint" sera installé. (Par défaut
                   "$(PREFIX)/bin", par ex. "/usr/local/bin")

           DATA_PREFIX
                   Où les fichiers de données (sons, graphiques, pinceaux,
                   tampons, fontes) iront, et où Tux Paint ira les chercher
                   pour tourner (Réglé à "$(PREFIX)/share/tuxpaint")

           DOC_PREFIX
                   Où sera mise la documentation (les répertoires "docs".
                   'Réglé à "$(PREFIX)/share/doc/tuxpaint")

           MAN_PREFIX
                   Où ira la page de manuel de Tuxpaint (Réglé à
                   "$(PREFIX)/share/man")

           ICON_PREFIX — $(PREFIX)/share/pixmaps

           X11_ICON_PREFIX — $(PREFIX)/X11R6/include/X11/pixmaps

           GNOME_PREFIX — $(PREFIX)/share/gnome/apps/Graphics

           KDE_PREFIX — $(PREFIX)/share/applnk/Graphics
                   Où iront les icônes et les lanceurs (pour GNOME et KDE)

           LOCALE_PREFIX
                   Où iront les fichiers de traduction, et où Tux Paint ira
                   les chercher. (Réglé à "$(PREFIX)/share/locale/") (la
                   destination finale de la traduction sera dans le
                   répertoire de la locale (par ex "es" pour l'espagnol, dans
                   le sous-répertoire "LC_MESSAGES").

           Remarque : Cette liste est obsolète. Voir "Makefile" et
           "Makefile-i18n" pour une liste complète.

Débogage :

     Le débogage (vers "STDOUT", par exemple le terminal, ou vers un fichier
     "stdout.txt", sous Windows) peut être activé en définissant "DEBUG" (et,
     si un mode verbeux est souhaité, "VERBOSE") # define dans "src/debug.h.

Désinstallation de Tux Paint :

  Windows

    Utilisation du désinstalleur

         Si vous avez installé les raccourcis du menu Démarrer (par défaut),
         accédez au dossier TuxPaint et sélectionnez "Désinstaller". Une
         boîte s'affichera qui confirme que vous êtes sur le point de
         désinstaller Tux Paint et, si vous en êtes certain et que vous
         souhaitez supprimer définitivement Tux Paint, cliquez sur le bouton
         'Désinstaller'.

         Quand c'est fini, cliquez sur "Fermer".

    En utilisant le panneau de configuration

         Il est également possible d'utiliser l'entrée "TuxPaint (supprimer
         uniquement)" dans la Section Ajout / Suppression de programmes du
         Panneau de configuration.

  Linux

       Dans le répertoire source de Tux Paint (où vous avez compilé Tux
       Paint), vous pouvez utiliser une cible "make uninstall" pour
       désinstaller Tux Paint. Par défaut, cela doit être fait par
       l'utilisateur "root" ("superutilisateur"), mais si vous avez installé
       Tux Paint à un autre endroit (par ex. en mettant "PREFIX=..." à "make"
       et "make install", vous ne pourrez pas, et il faudra fournier les
       mêmes réglages ici. (Voir les instructions d'installation ci-dessus
       pour plus d'informations.)
